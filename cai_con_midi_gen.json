{
    "openapi": "3.0.3",
    "info": {
      "title": "Cai MIDI Generation and Theory API",
      "version": "1.0.0",
      "description": "Text prompt based MIDI generation contextual continuation and music theory explanation. MIDI transferred as base64 encoded Standard MIDI file strings in midiFileB64 fields."
    },
    "servers": [
      { "url": "https://api.example.com/v1" }
    ],
    "paths": {
      "/generate": {
        "post": {
          "summary": "Generate new MIDI from text prompt",
          "operationId": "generateMIDI",
          "security": [ { "ApiKeyAuth": [] } ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GenerateRequest" },
                "examples": {
                  "basic": {
                    "value": {
                      "prompt": "Create a four bar lo fi drum groove at 90 BPM with soft swing",
                      "targetBars": 4,
                      "tempoBPM": 90,
                      "timeSignature": "4/4",
                      "keyHint": "A minor",
                      "metadataHints": {
                        "genre": "lofi",
                        "mood": "chill",
                        "melodicRole": "drums",
                        "instrumentation": "drum kit",
                        "generationBars": 4
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": { "description": "Generated MIDI success", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GenerateResponse" } } } },
            "400": { "description": "Bad request", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
            "429": { "description": "Rate limit exceeded", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
            "500": { "description": "Server error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
          }
        }
      },
      "/generate/contextual": {
        "post": {
          "summary": "Context aware MIDI generation continuation variation accompaniment",
          "operationId": "generateMIDIContextual",
          "security": [ { "ApiKeyAuth": [] } ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ContextualGenerateRequest" },
                "examples": {
                  "continuation": {
                    "value": {
                      "prompt": "Continue this progression with a contrasting B section",
                      "context": {
                        "midiFileB64": "TVRoZAAAAAYAAAABAGBNVHJrAAA...",
                        "task": "continue",
                        "selectionBeats": [0, 16]
                      },
                      "metadataHints": {
                        "generationStartBeat": 16,
                        "generationEndBeat": 24
                      },
                      "targetBars": 8
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": { "description": "Contextual generation success", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ContextualGenerateResponse" } } } },
            "400": { "description": "Bad request", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
            "429": { "description": "Rate limit exceeded", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
            "500": { "description": "Server error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
          }
        }
      },
      "/theory/explain": {
        "post": {
          "summary": "Explain music theory aspects of supplied MIDI",
          "operationId": "explainTheory",
          "security": [ { "ApiKeyAuth": [] } ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TheoryExplainRequest" }
              }
            }
          },
          "responses": {
            "200": { "description": "Theory analysis success", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TheoryExplainResponse" } } } },
            "400": { "description": "Bad request", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
            "429": { "description": "Rate limit exceeded", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
            "500": { "description": "Server error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "ApiKeyAuth": {
          "type": "apiKey",
          "in": "header",
          "name": "X-API-Key"
        }
      },
      "schemas": {
        "GenerateRequest": {
          "type": "object",
          "required": ["prompt"],
          "properties": {
            "prompt": { "type": "string", "description": "Natural language description of desired music" },
            "targetBars": { "type": "integer", "minimum": 1, "maximum": 32, "description": "Desired bar length upper bound 32 overridden if metadataHints.generationBars present" },
            "tempoBPM": { "type": "number", "minimum": 20, "maximum": 400, "description": "Optional tempo hint" },
            "timeSignature": { "type": "string", "pattern": "^[0-9]+/[0-9]+$", "description": "Time signature like 4/4 3/4 6/8" },
            "keyHint": { "type": "string", "description": "Key or mode hint like A minor C Dorian" },
            "metadataHints": {
              "type": "object",
              "description": "Optional stylistic and control tags all free text unless constrained",
              "properties": {
                "genre": { "type": "string" },
                "mood": { "type": "string" },
                "style": { "type": "string" },
                "melodicRole": { "type": "string", "description": "lead rhythm bass pad percussion etc" },
                "instrumentation": { "type": "string" },
                "generationBars": { "type": "integer", "minimum": 1, "maximum": 32, "description": "Explicit bar length request overrides targetBars" }
              },
              "additionalProperties": { "type": "string" }
            }
          }
        },
        "ContextualGenerateRequest": {
          "allOf": [
            { "$ref": "#/components/schemas/GenerateRequest" },
            {
              "type": "object",
              "required": ["context"],
              "properties": {
                "context": {
                  "type": "object",
                  "required": ["task", "midiFileB64"],
                  "properties": {
                    "midiFileB64": { "type": "string", "description": "Original MIDI base64 full or segment" },
                    "selectionBeats": {
                      "type": "array",
                      "items": { "type": "number", "minimum": 0 },
                      "minItems": 2,
                      "maxItems": 2,
                      "description": "Start and end beat inclusive start exclusive end"
                    },
                    "task": {
                      "type": "string",
                      "enum": ["continue", "variation", "accompaniment", "revoice", "fill", "bridge", "harmonize"],
                      "description": "Generation mode"
                    }
                  }
                },
                "metadataHints": {
                  "allOf": [
                    { "$ref": "#/components/schemas/GenerateRequest/properties/metadataHints" },
                    {
                      "type": "object",
                      "properties": {
                        "generationStartBeat": { "type": "number", "minimum": 0, "description": "Desired start beat for new material if omitted server infers" },
                        "generationEndBeat": { "type": "number", "minimum": 0, "description": "Desired end beat for new material if omitted server infers" }
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        "TheoryExplainRequest": {
          "type": "object",
          "required": ["midiFileB64"],
          "properties": {
            "midiFileB64": { "type": "string", "description": "MIDI to analyze" },
            "question": { "type": "string", "description": "Specific user question optional" },
            "focus": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["harmony", "melody", "rhythm", "voiceLeading", "form", "motif", "orchestration"]
              },
              "description": "Subset of domains to emphasize"
            },
            "systemPrompt": { "type": "string", "description": "Style or depth directive optional" }
          }
        },
        "GenerateResponse": {
          "type": "object",
          "required": ["promptEcho", "midiFileB64", "metadata"],
          "properties": {
            "promptEcho": { "type": "string" },
            "midiFileB64": { "type": "string", "description": "Generated MIDI base64" },
            "metadata": {
              "type": "object",
              "properties": {
                "tempoBPM": { "type": "number" },
                "timeSignature": { "type": "string" },
                "keyDetected": { "type": "string" },
                "genre": { "type": "string" },
                "mood": { "type": "string" },
                "style": { "type": "string" },
                "melodicRole": { "type": "string" },
                "instrumentation": { "type": "string" },
                "tags": { "type": "array", "items": { "type": "string" } },
                "confidence": { "type": "number", "minimum": 0, "maximum": 1 }
              }
            },
            "notesSummary": { "type": "string", "description": "Short human description" },
            "warnings": { "type": "array", "items": { "type": "string" } }
          }
        },
        "ContextualGenerateResponse": {
          "allOf": [
            { "$ref": "#/components/schemas/GenerateResponse" },
            {
              "type": "object",
              "required": ["originalMidiFileB64", "generatedMidiFileB64", "combinedMidiFileB64"],
              "properties": {
                "originalMidiFileB64": { "type": "string", "description": "Original input MIDI" },
                "generatedMidiFileB64": { "type": "string", "description": "Only the new material" },
                "combinedMidiFileB64": { "type": "string", "description": "Merged original plus new" }
              }
            }
          ]
        },
        "TheoryExplainResponse": {
          "type": "object",
          "required": ["analysis"],
          "properties": {
            "analysis": { "type": "string", "description": "Narrative explanation" },
            "structured": {
              "type": "object",
              "properties": {
                "key": { "type": "string" },
                "mode": { "type": "string" },
                "scaleDegreesUsage": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "degree": { "type": "string" },
                      "count": { "type": "integer", "minimum": 0 }
                    }
                  }
                },
                "chordProgression": { "type": "array", "items": { "type": "string" } },
                "motifs": { "type": "array", "items": { "type": "string" } },
                "formSections": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": { "type": "string" },
                      "startBeat": { "type": "number", "minimum": 0 },
                      "endBeat": { "type": "number", "minimum": 0 }
                    }
                  }
                }
              }
            },
            "promptEcho": { "type": "string", "nullable": true },
            "warnings": { "type": "array", "items": { "type": "string" } }
          }
        },
        "Error": {
          "type": "object",
          "properties": {
            "error": { "type": "string" },
            "detail": { "type": "string" }
          }
        }
      }
    },
    "security": []
  }